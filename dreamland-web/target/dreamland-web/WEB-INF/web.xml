<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
  <!--web.xml 为 Web 容器的配置文件，用来初始化配置信息，主要定义了：-->
  <!--Web 应用的名字、描述（display-name 和 description 标签）;-->
  <!--应用范围的初始化参数（context-param 标签）；-->
  <!--过滤器配置（filter 标签）；-->
  <!--监听器配置(listener 标签)；-->
  <!--servlet 配置（servlet 标签，如前端控制器和验证码）；-->
  <!--欢迎页面（welcome-file-list 标签，如 index.jsp 页面）；-->
  <!--session失效时间（session-config 标签）；-->
  <!--错误页面配置（error-page 标签，如 404、500错误页面等）。-->

  <display-name>dreamland-web</display-name>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath*:spring-mybatis.xml
      classpath*:applicationContext-redis.xml,
      <!--classpath*:applicationContext-activemq.xml,-->
      classpath:applicationContext-solr.xml
      <!--classpath:spring-security.xml-->
    </param-value>
  </context-param>

  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>

  <!-- 编码过滤器 解决POST乱码问题-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--自定义过滤器
  在进入 index.jsp 之前进行过滤器拦截，先获取页面数据，之后再返回 index.jsp 页面。
  -->
  <filter>
    <filter-name>dispatcherDemoFilter</filter-name>
    <filter-class>com.zxx.dreamland.interceptor.IndexJspFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>dispatcherDemoFilter</filter-name>
    <url-pattern>/index.jsp</url-pattern>
  </filter-mapping>

  <!--Spring Security 的权限过滤器链-->
  <!--<filter>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->

  <!-- spring监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 防止spring内存溢出监听器，比如quartz -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!-- spring mvc servlet-->
  <servlet>
    <servlet-name>SpringMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  <!-- servlet-mapping -->
  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <!-- 此处也可以配置成 *.do 形式 -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 指明对于如下资源文件不采用spring的过滤器 -->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.xml</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.css</url-pattern>
  </servlet-mapping>

  <!--验证码-->
  <servlet>
    <servlet-name>CaptchaServlet</servlet-name>
    <servlet-class>
      com.zxx.dreamland.common.CodeCaptchaServlet
    </servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>CaptchaServlet</servlet-name>
    <url-pattern>/captchaServlet</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <!-- session配置 -->
  <session-config>
    <session-timeout>15</session-timeout>
  </session-config>
</web-app>